#!/bin/bash
# This file should be execute as root

# udev will wait for our script to finish before the monitor is available
# for use, so we will use the `at` command to run our command again as
# # another user:
if [ "$1" != "forked" ]; then
    echo "$(dirname $0)/$(basename $0) forked" | at now
    exit
fi

# udev runs as root, so we need to tell it how to connect to the X server:
export DISPLAY=:0
export XAUTHORITY=/home/liang/.Xauthority

# Find out the device path to our graphics card:
cardPath=/sys/$(udevadm info -q path -n /dev/dri/card0)

# Detect if the monitor is connected and, if so, the monitor's ID:
conDP1=$(xrandr | sed -n '/\bDP-1 connected\b /p')
shaDP1=$(sha1sum $cardPath/card0-DP-1/edid | cut -f1 -d " ")

# The useful part: check what the connection status is, and run some other commands
if [ -n "$conDP1" ]; then
  if [ $shaDP1 = "4433e61e75cad38a2682967d84a292f4ff33e053" ]; then
    xrandr --output DP-1 --mode 3440x1440 --output eDP-1 --off
  else
    # If it's not my LG monitor just light it up in auto mode
    xrandr --output DP-1 --auto --output eDP-1 --off
  fi
else
  # Use the default macbook pro monitor
  xrandr --output eDP-1 --mode 1680x1050 --output DP-1 --off
fi
